/* Copyright (C) 2022 Simo Sorce <simo@redhat.com>
   SPDX-License-Identifier: Apache-2.0 */

#include "encoder.h.pre"
#include <openssl/asn1t.h>
#include <openssl/pem.h>

BEGIN:

PRE_IGNORE: #include "provider.h"
PRE_IGNORE: #include "encoder.gen.h"

/* P11PROV_RSA_PUBKEY */
IMPLEMENT_ASN1_FUNCTIONS(P11PROV_RSA_PUBKEY)

ASN1_SEQUENCE(P11PROV_RSA_PUBKEY) = {
    ASN1_SIMPLE(P11PROV_RSA_PUBKEY, n, ASN1_INTEGER),
    ASN1_SIMPLE(P11PROV_RSA_PUBKEY, e, ASN1_INTEGER),
} ASN1_SEQUENCE_END(P11PROV_RSA_PUBKEY)

IMPLEMENT_PEM_write_bio(P11PROV_RSA_PUBKEY, P11PROV_RSA_PUBKEY,
                        PEM_STRING_RSA_PUBLIC, P11PROV_RSA_PUBKEY)

/* P11PROV_KEYPAIR_REF */
IMPLEMENT_ASN1_FUNCTIONS(P11PROV_KEYPAIR_REF)
ASN1_SEQUENCE(P11PROV_KEYPAIR_REF) = {
    ASN1_SIMPLE(P11PROV_KEYPAIR_REF, type, ASN1_OBJECT),
    ASN1_SIMPLE(P11PROV_KEYPAIR_REF, key_type, ASN1_INTEGER),
    ASN1_SIMPLE(P11PROV_KEYPAIR_REF, uri, ASN1_PRINTABLESTRING),
} ASN1_SEQUENCE_END(P11PROV_KEYPAIR_REF)

IMPLEMENT_PEM_write_bio(P11PROV_KEYPAIR_REF, P11PROV_KEYPAIR_REF,
                        P11PROV_PRIVKEY_PEM_NAME, P11PROV_KEYPAIR_REF)
IMPLEMENT_PEM_read_bio(P11PROV_KEYPAIR_REF, P11PROV_KEYPAIR_REF,
                       P11PROV_PRIVKEY_PEM_NAME, P11PROV_KEYPAIR_REF)
